sap.ui.define(["sap/viz/ui5/controls/common/feeds/FeedItem","sap/ui/model/json/JSONModel","sap/viz/ui5/data/FlattenedDataset","feedbackapp/feedbackapp/model/models","sap/ui/core/format/DateFormat","sap/ui/core/Item","sap/m/MessageToast","sap/m/MessageBox","sap/m/Dialog","sap/m/Text","sap/m/TextArea","sap/m/Label","sap/m/Button","sap/m/library","sap/m/Select","sap/ui/core/Fragment","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,t,o,a,r,i,n,l,s,d,c,g,u,v,p,m,D,w){"use strict";var f=v.ButtonType;var M=v.DialogType;return{createDataSets:function(e,t){var o=a.vizFrameDataSetTemplate();t.getView().getModel("vizFrameModel").setProperty("/dataSet",o.dataSet);var r=t.getView().getModel("FeedbackModel").getProperty("/ReviewStorage");var i=t.getView().getModel("vizFrameModel").getProperty("/dataSet");var n=[];var l="";var l=(e,t,o)=>{e[t]=o};var s=i[0];var d=i[1];var c=i[2];var g=i[3];var u=i[4];var v=i[5];var p=i[6];var m=i[7];var D=i[8];var w=i[9];for(var f=0;f<r.length;f++){l(s,"reviewID-"+r[f].ReviewID,r[f].Intuition);l(c,"reviewID-"+r[f].ReviewID,r[f].Documentation);l(d,"reviewID-"+r[f].ReviewID,r[f].Communication);l(g,"reviewID-"+r[f].ReviewID,r[f].BusinessKnowledge);l(u,"reviewID-"+r[f].ReviewID,r[f].StakeholderMGMT);l(v,"reviewID-"+r[f].ReviewID,r[f].UserRequirements);l(p,"reviewID-"+r[f].ReviewID,r[f].Facilitation);l(m,"reviewID-"+r[f].ReviewID,r[f].SolutionDesign);l(D,"reviewID-"+r[f].ReviewID,r[f].Visibility);l(w,"reviewID-"+r[f].ReviewID,r[f].TechnicalSkills)}n.push(s);n.push(d);n.push(c);n.push(g);n.push(u);n.push(v);n.push(p);n.push(m);n.push(D);n.push(w);t.getView().getModel("vizFrameModel").setProperty("/dataSet",n);this.setAveragesData(n,t)},getAttributeNames:function(e){var t=e.getView().getModel("vizFrameModel").getProperty("/dataSet");var o=Object.keys(t[0]);return o},setAveragesData:function(e,t){var o=t.getView().getModel("FeedbackModel");var a=t.getView().getModel("FeedbackModel").getProperty("/Feedback/"+(o.getProperty("/ReviewDetails/FeedbackID")-1));try{var r=Object.keys(a)}catch(e){r=0}for(var i=0;i<e.length;i++){for(var n=0;n<r.length;n++){if(r[n]===e[i].Attribute){var l=r[n];e[i].Averages=a[l];break}}}t.getView().getModel("vizFrameModel").setProperty("/dataSet",e)},updateMeasures:function(e){var t=e.getView().getModel("vizFrameModel").getProperty("/measures");var o=this.getAttributeNames(e);for(var a=0;a<o.length;a++){var r={name:o[a],value:"{"+o[a]+"}"};t.push(r);e.getView().getModel("vizFrameModel").setProperty("/measures",t)}},setFeeds:function(t,o){t.removeAllFeeds();var a=o.getView().getModel("vizFrameModel").getProperty("/dataSet");var r=Object.keys(a[0]);var i=1;for(var n=0;n<r.length;n++){t.addFeed(new e({uid:n<i?"categoryAxis":"valueAxis",type:n<i?"Dimension":"Measure",values:[r[n]]}))}},setChart:function(e,a){e.setModel(new t({data:a.getView().getModel("vizFrameModel").getProperty("/dataSet")}));e.setUiConfig(a.getView().getModel("vizFrameModel").getProperty("/uiConfig"));e.setDataset(new o({dimensions:a.getView().getModel("vizFrameModel").getProperty("/dimensions"),measures:a.getView().getModel("vizFrameModel").getProperty("/measures"),data:"{/data}"}))},alphabeticalCompare:function(e,t){let o=0;if(e.name>t.name){o=1}else if(e.name<t.name){o=-1}return o},createNewEntryAndDialog:function(e,t){var o=t.getView().getModel("SettingsModel").getProperty("/ReviewsListSelectedKey");var i=t.getView().getModel("FeedbackModel");var l=i.getProperty("/Feedback");var s=t.getView().getModel("EmployeeNamesModel").getProperty("/Employee");console.log(s);s.sort(this.alphabeticalCompare);var d=t.getView().getModel("PDPlanModel");var c;if(o==="PDdevItems"||o==="Action"){var g=d.getProperty("/CurrentPDPlan");if(o==="PDdevItems"){c=a.createDevItemTemplate()}else{c=a.createGoalTemplate();c.DevItemID=e.getSource().getBindingContext("PDPlanModel").getObject().DevItemID}c.PDplanID=g.PDplanID;c.DateCreated=r.getDateInstance({pattern:"yyyyMMdd"}).format(new Date);d.setProperty("/NewItem",c);console.log(c)}else if(o==="Feedback"){c=a.createFeedbackTemplate();c.EmployeeName=s[0].Displayname;c.ManagerName=s[0].Displayname;c.ReviewerName="Admin";c.DateCreated=r.getDateInstance({pattern:"yyyyMMdd"}).format(new Date);i.setProperty("/NewReview",c)}else if(o==="Reviews"){c=a.createIndividualReviewTemplate();c.ManagerName=s[0].Displayname;c.EmployeeName=s[0].Displayname;if(l.length===0){n.show("No Feedback Report Created!")}else{c.FeedbackID=l[l.length-1].FeedbackID;c.DateCreated=r.getDateInstance({pattern:"yyyyMMdd"}).format(new Date);i.setProperty("/NewReview",c)}}if(!t.pDialog){t.pDialog=t.loadFragment({name:"feedbackapp.feedbackapp.view.fragments.CreateNewEntry"})}t.pDialog.then(function(e){e.open()})},parseFloats:function(e){e.Intuition=parseFloat(e.Intuition);e.Documentation=parseFloat(e.Documentation);e.Communication=parseFloat(e.Communication);e.BusinessKnowledge=parseFloat(e.BusinessKnowledge);e.StakeholderMGMT=parseFloat(e.StakeholderMGMT);e.UserRequirements=parseFloat(e.UserRequirements);e.Facilitation=parseFloat(e.Facilitation);e.SolutionDesign=parseFloat(e.SolutionDesign);e.Visibility=parseFloat(e.Visibility);e.TechnicalSkills=parseFloat(e.TechnicalSkills)},sumOfScores:function(e){var t=0;t=t+e.Intuition;t=t+e.Documentation;t=t+e.Communication;t=t+e.BusinessKnowledge;t=t+e.StakeholderMGMT;t=t+e.UserRequirements;t=t+e.Facilitation;t=t+e.SolutionDesign;t=t+e.Visibility;t=t+e.TechnicalSkills;return t},reviewStateChange:function(e,t){var o=e.getView().getModel("FeedbackModel");var a=sap.ui.core.UIComponent.getRouterFor(e);var i=e.getView().getModel("SettingsModel").getProperty("/UserRole");var n=0;var s=e.getView().getModel("FeedbackModel").getProperty("/ReviewDetails");if(t==="Completed"){s.ReviewState="Completed";s.DateSubmitted=r.getDateInstance({pattern:"yyyyMMdd"}).format(new Date)}else{if(t==="Pending"){s.DateSubmitted=""}s.ReviewState=t}n=this.sumOfScores(s);if((n<=15||n>=45)&&i!=="Admin"){l.warning("Extreme Reviews Scores Detected. Are You Sure? The admin knows who you are, and may or may not follow up on these scores.",{actions:[l.Action.YES,l.Action.NO],title:"Extreme Review Scores",onClose:function(a){if(a===l.Action.YES){e.getView().getModel("oDataFeedback").update("/Reviews(ReviewID="+s.ReviewID+")",s,{success:function(a,r){console.log("reviewStateChange Success!");console.log("Review "+t);e.loadFromBackend("/ReviewList",o,"Reviews")},error:function(e){console.log("Error! Trying to Submit Review");console.log("Error! submit review")}})}}.bind(this)})}else{e.getView().getModel("oDataFeedback").update("/Reviews(ReviewID="+s.ReviewID+")",s,{success:function(r,i){console.log("reviewStateChange Success!");console.log("Review "+t);e.loadFromBackend("/ReviewList",o,"Reviews");a.navTo("Main")},error:function(e){console.log("Error! Trying to Submit Review");console.log("Error! submit review")}})}},readFeedBackToReview:function(e,t){var o=e.getView().getModel("SettingsModel");var a="/Feedback(FeedbackID="+t.FeedbackID+")";e.getView().getModel("oDataFeedback").read(a,{success:function(e,t){console.log("Feedback Entry found in DB");o.setProperty("/RoleAttributes",e)},error:function(e){console.log("Error! Could not Read feedback Entry from DB!")}})},deleteFeedbackReport:function(e,t){var o=e.getView().getModel("FeedbackModel");t.ReviewState="Archived";t.ReviewerName="Admin";e.getView().getModel("oDataFeedback").update("/Feedback(FeedbackID="+t.FeedbackID+")",t,{success:function(t,a){e.loadFromBackend("/ReviewList",o,"Feedback");console.log("Feedback Entry Archived")},error:function(e){console.log("Error occurred trying to archiving Feedback from DB")},refreshAfterChange:true})},deleteReviewSingular:function(e,t){var o=e.getView().getModel("FeedbackModel");var a=o.getProperty("/Feedback");var r=this.getParentFeedback(e,t);r.ReviewerName="";t.ReviewState="Archived";e.getView().getModel("oDataFeedback").update("/Reviews(ReviewID="+t.ReviewID+")",t,{success:function(a,i){r.ReviewState="Pending";e.loadFromBackend("/ReviewList",o,"Reviews");console.log("Review Entry Archived");e.getView().getModel("oDataFeedback").update("/Feedback(FeedbackID="+t.FeedbackID+")",r,{success:function(e,t){console.log("Feedback updated after review archived");console.log("Feedback updated after review archived")},error:function(e){console.log("Feedback could not be updated after review was deleted");console.log("Feedback could not be updated after review was deleted")}})},error:function(e){console.log("Error occurred trying to delete Feedback from DB")},refreshAfterChange:true})},getParentFeedback:function(e,t){var o=e.getView().getModel("FeedbackModel");var a=o.getProperty("/Feedback");var r;for(var i=0;i<a.length;i++){if(a[i].FeedbackID===t.FeedbackID){r=a[i]}}this.stringifyScores(this,r);return r},createGoal:function(e){var t=e.getView().getModel("FeedbackModel");var o=t.getProperty("/Goals").length-1;var r=t.getProperty("/Goals");var i=a.createGoalTemplate();e.getView().getModel("oDataFeedback").create("/Goals",i,{success:function(o,a){console.log("New Goal Created DB - Grow Conversation");e.loadFromBackend("/Goals",t,"Goals")},error:function(e){console.log("Error Creating new Goal in DB")},refreshAfterChange:true})},updateGoal:function(e){var t=e.getView().getModel("FeedbackModel");var o=t.getProperty("/Goal");e.getView().getModel("oDataFeedback").update("/Goals(GoalSettingID="+o.GoalSettingID+")",o,{success:function(o,a){console.log("Goal updated DB - Grow Conversation");e.loadFromBackend("/Goals",t,"Goals")},error:function(e){console.log("Error for Goal update - Grow Conversation")}});this.loadNotes(e)},deleteGoal:function(e,t){var o=e.getView().getModel("FeedbackModel");e.getView().getModel("oDataFeedback").remove("/Goals("+t.GoalSettingID+")",{success:function(t,a){e.loadFromBackend("/Goals",o,"Goals");console.log("Goal Removed from DB")},error:function(e){console.log("Goal could not be removed from DB, Error occurred")},refreshAfterChange:true});this.loadNotes(e)},parseFloats:function(e){e.Intuition=parseFloat(e.Intuition);e.Documentation=parseFloat(e.Documentation);e.Communication=parseFloat(e.Communication);e.BusinessKnowledge=parseFloat(e.BusinessKnowledge);e.StakeholderMGMT=parseFloat(e.StakeholderMGMT);e.UserRequirements=parseFloat(e.UserRequirements);e.Facilitation=parseFloat(e.Facilitation);e.SolutionDesign=parseFloat(e.SolutionDesign);e.Visibility=parseFloat(e.Visibility);e.TechnicalSkills=parseFloat(e.TechnicalSkills)},stringifyScores:function(e,t){t.Intuition=t.Intuition.toString();t.Documentation=t.Documentation.toString();t.Communication=t.Communication.toString();t.BusinessKnowledge=t.BusinessKnowledge.toString();t.StakeholderMGMT=t.StakeholderMGMT.toString();t.UserRequirements=t.UserRequirements.toString();t.Facilitation=t.Facilitation.toString();t.SolutionDesign=t.SolutionDesign.toString();t.Visibility=t.Visibility.toString();t.TechnicalSkills=t.TechnicalSkills.toString();return t},getMSGraphEmployees:function(e){var t=e.getView().getModel("EmployeeNamesModel");var o=[];var a=e.getView().getModel("SettingsModel").getProperty("/MasterSearchQuery");if(a&&a.length>0){o.push(new D({filters:[new D("Displayname",w.Contains,a),new D("Manager",w.Contains,a)],and:false}))}e.getView().getModel("oDataFeedback").read("/ManagerDirectReports",{filters:o,success:function(e,o){console.log("Employee Names Model Set");t.setProperty("/Employee",e.results);console.log(t.getProperty("/Employee"))},error:function(e){console.log("Did not Read from MSGraph to set Employee Model");console.log(e)}})},createNote:function(e){var t=e.getView().getModel("PDPlanModel");var o=t.getProperty("/CurrentPDPlan");var a=r.getDateInstance({pattern:"yyyyMMdd"}).format(new Date);t.setProperty("/NewNote/NoteDate",a);var i=t.getProperty("/NewNote");i.GoalSettingID=parseInt(i.GoalSettingID);i.DevItemID=parseInt(i.DevItemID);i.PDplanID=o.PDplanID;console.log(i);var n=this;e.getView().getModel("oDataFeedback").create("/PDNotes",i,{success:function(t,o){console.log("New Note Saved against the Action Item Goal");n.loadNotes(e);console.log("new note created")},error:function(e){console.log("Error Creating new Note in DB");console.log("error creating new note")},refreshAfterChange:true})},loadNotes:function(e){var t=e.getView().getModel("PDPlanModel");var o=t.getProperty("/CurrentPDPlan");e.getPDPlanFromBackend("FilterOutArchived","/DevelopmentItemsList","PDplans(PDplanID="+o.PDplanID+")","to_DevItem/to_goals,to_DevItem/to_notes")},deleteNote:function(e,t){var o=e.getView().getModel("PDPlanModel");e.getView().getModel("oDataFeedback").remove("/PDNotes("+t.NoteID+")",{success:function(e,t){console.log("PD Note Deleted and Feed Updated")},error:function(e){console.log("Error Deleting PD Notes from DB")},refreshAfterChange:true});this.loadNotes(e)},setPDPlanStaffNames:function(e){var t=[];var o=e.getView().getModel("PDPlanModel")},removeAssociationSets:function(e){if(Object.hasOwn(e,"to_goals")===true){delete e.to_goals}if(Object.hasOwn(e,"to_notes")===true){delete e.to_notes}if(Object.hasOwn(e,"to_pdplans")===true){delete e.to_pdplans}if(Object.hasOwn(e,"to_DevItem")===true){delete e.to_DevItem}},updateEntitySet:function(e,t,o,a,r){this.removeAssociationSets(r);e.getView().getModel("oDataFeedback").update("/"+t+"("+o+"="+a+")",r,{success:function(o,a){console.log("Update Successful!");if(t==="PDplans"){e.getPDPlanFromBackend("FilterOutArchived","/PDplansList","PDplans",null)}else if(t==="DevelopmentItemsList"){debugger;e.getPDPlanFromBackend("ShowAll","/DevelopmentItemsList","PDplans(PDplanID="+parentPDplan.PDplanID+")","to_DevItem/to_goals,to_DevItem/to_notes")}else if(t==="PDnotes"){e.loadNotes(e)}console.log("Update Successful!")},error:function(e){console.log("error trying to update")}})},callStaffMSGraph:function(){var{Client:e}=require("@microsoft/microsoft-graph-client");var{TokenCredentialAuthenticationProvider:t}=require("@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials");var{DeviceCodeCredential:o}=require("@azure/identity");var a=new o(tenantId,clientId,clientSecret);var r=new t(a,{scopes:[scopes]});var i=e.initWithMiddleware({debugLogging:true,authProvider:r})}}});